name: Deploy Staging

on:
  push:
     branches:
     - main

jobs: 
  deploy-staging:
    name: Deploy to staging server
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Execute deployment command using ssh
        uses: appleboy/ssh-action@v1
        env:
          APP_STG_PATH: ${{ vars.APP_STG_PATH }}
          GIT_URL: ${{ vars.GIT_URL }}
          MINIO_STG_ENDPOINT: ${{ secrets.MINIO_STG_ENDPOINT }}
          MINIO_STG_ACCESS_KEY: ${{ secrets.MINIO_STG_ACCESS_KEY }}
          MINIO_STG_SECRET_KEY: ${{ secrets.MINIO_STG_SECRET_KEY }}
          APP_STG_PORT: ${{ secrets.APP_STG_PORT }}
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          envs: MINIO_STG_ENDPOINT, MINIO_STG_ACCESS_KEY, MINIO_STG_SECRET_KEY, APP_STG_PORT
          script: |
            if [[ -d "home/ubuntu/${APP_STG_PATH}" ]]; then
              cd $APP_STG_PATH
              sudo docker compose down pacmusic-stg
              git pull origin main
            else
              ssh-keyscan github.com > ~/.ssh/known_hosts
              git clone $GIT_URL $APP_STG_PATH
              cd $APP_STG_PATH
            fi

            echo "APP_STG_PORT=$APP_STG_PORT" > .env
            echo "MINIO_STG_ENDPOINT=$MINIO_STG_ENDPOINT" >> .env
            echo "MINIO_STG_ACCESS_KEY=$MINIO_STG_ACCESS_KEY" >> .env
            echo "MINIO_STG_SECRET_KEY=$MINIO_STG_SECRET_KEY" >> .env

            # Run app
            sudo docker compose up --build --detach pacmusic-stg

      - name: Hit endpoint
        run: |
          sleep 20
          curl ${{ secrets.STG_URL }}
        
            
            
            
          
